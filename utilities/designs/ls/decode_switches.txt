/*
 * Name: decode_switches -- translate the command line arguments into local variables
 * Description: 
 * Arguments: argc is the number of command line arguements,
              argv is the command line argument list
 * Return Values: optind as return value, aka, next known option character in optstring
 */
static int decode_switches(int argc, char **argv);

/*
 * short switches
 */
char short_switches[] = "AachiIlLmnrRSt1";

/*
 * struct option and long options array
 */
#include <getopt.h>
#ifndef __need_getopt
/* Describe the long-named options requested by the application.
   The LONG_OPTIONS argument to getopt_long or getopt_long_only is a vector
   of `struct option' terminated by an element containing a name which is
   zero.

   The field `has_arg' is:
   no_argument		(or 0) if the option does not take an argument,
   required_argument	(or 1) if the option requires an argument,
   optional_argument 	(or 2) if the option takes an optional argument.

   If the field `flag' is not NULL, it points to a variable that is set
   to the value given in the field `val' when the option is found, but
   left unchanged if the option is not found.

   To have a long-named option do something other than set an `int' to
   a compiled-in constant, such as set a value from `optarg', set the
   option's `flag' field to zero and its `val' field to a nonzero
   value (the equivalent single-letter option character, if there is
   one).  For long options that have a zero `flag' field, `getopt'
   returns the contents of the `val' field.  */

struct option
{
  const char *name;
  /* has_arg can't be an enum because some compilers complain about
     type mismatches in all the code that assumes it is an int.  */
  int has_arg;
  int *flag;
  int val;
};

/* Names for the values of the `has_arg' field of `struct option'.  */

# define no_argument		0
# define required_argument	1
# define optional_argument	2
#endif	/* need getopt */

static struct option const long_options[] = 
{
    {"color", optional_argument, NULL, COLOR_OPTION},
    {"full-time", no_argument, NULL, FULL_TIME_OPTION},
    {"human-readable", no_argument, NULL, "h"},
    {"dereference", no_argument, NULL, 'L'},
    {"ignore", required, NULL, 'I'},
    {"numeric-uid-gid", no_argument, NULL, 'n'},
    {"help", no_argument, NULL, HELP_OPTION},
    {"version", no_argument, NULL, VERSION_OPTION},
    {NULL, 0, NULL, 0}
};

/*
 * functions: 1, getopt for short switches
 *            2, getopt_long for long options
 */
#include <unistd.h>
int getopt(int arg, char* const argv[], const char *optstring);

#include <getopt.h>
int getopt_long(int argc, char * const argv[], const char *optstring, 
                const struct option *longopts, int *longindex);
